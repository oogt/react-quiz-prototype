{"version":3,"sources":["components/button.js","components/choice.js","components/question.js","components/step.js","components/progress-bar.js","components/quiz.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","children","onClick","disabled","subtle","react_default","a","createElement","className","concat","Choice","label","this","props","config","_this$props","onSelect","selectedChoice","Component","Question","setQuestionValid","data","question","choices","map","choiceConfig","index","components_choice","key","value","newValue","Step","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","questionValidity","questions","q","state","isStepValid","_setStepValid","bind","assertThisInitialized","_setQuestionValid","valid","toConsumableArray","setState","every","v","setData","newData","_this2","stepNumber","activeStep","onConfirm","goBack","CSSTransition","in","timeout","enter","exit","classNames","unmountOnExit","questionConfig","src_components_question","_setDataForQuestion","src_components_button","ProgressBar","numberOfSteps","Quiz","quizConfig","steps","length","initialData","step","currentStep","_nextStep","_prevStep","_setDataForStep","stepData","progress_bar","stepConfig","App","quiz","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e0aeb0f6.chunk.js","sourcesContent":["import React from 'react';\n\nimport \"./button.css\";\n\nconst Button = ({children, onClick, disabled, subtle}) => (\n  <button className={`button ${subtle && 'subtle'}`} onClick={onClick} disabled={disabled} >\n    {children}\n  </button>\n)\n\nexport default Button;\n","import React, { Component } from 'react';\n\nimport './choice.css';\n\nclass Choice extends Component {\n  render() {\n    const { label } = this.props.config;\n    const { onSelect, selectedChoice } = this.props;\n\n    return (\n      <div\n        className={`choice ${selectedChoice === label ? 'selected' : ''}`}\n        onClick={() => onSelect(label)}>\n        {label}\n      </div>\n    )\n  }\n}\n\nexport default Choice;\n","import React from 'react';\n\nimport Choice from './choice';\nimport './question.css';\n\nconst Question = ({ setQuestionValid, onSelect, data, config}) => {\n  const { question, choices } = config;\n\n  return (\n    <div className=\"question\">\n      <h2>{question}</h2>\n\n      {choices.map((choiceConfig, index) => (\n        <Choice\n          key={`choice-${index}`}\n          config={choiceConfig}\n          selectedChoice={data}\n          onSelect={value => {\n            let newValue = value === data ? null : value;\n            onSelect(newValue);\n            setQuestionValid(newValue !== null);\n          }} />\n      ))}\n    </div>\n  )\n}\n\nexport default Question;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport Button from \"./button\";\nimport Question from \"./question\";\n\nclass Step extends Component {\n  constructor(props) {\n    super(props);\n\n    const questionValidity = props.config.questions.map(q => false);\n\n    this.state = {\n      isStepValid: false,\n      questionValidity\n    };\n\n    this._setStepValid = this._setStepValid.bind(this);\n    this._setQuestionValid = this._setQuestionValid.bind(this);\n  }\n  _setQuestionValid(valid, index) {\n    let questionValidity = [...this.state.questionValidity];\n    questionValidity[index] = valid;\n    this.setState({\n      questionValidity\n    });\n\n    const isStepValid = questionValidity.every(v => !!v);\n\n    // Check if all questions in this step are valid\n    this._setStepValid(isStepValid);\n  }\n\n  _setStepValid(valid) {\n    this.setState({\n      isStepValid: valid\n    });\n  }\n  _setDataForQuestion(setData, index, data, newValue) {\n    const newData = [...data];\n    newData[index] = newValue;\n    setData(newData);\n  }\n\n  render() {\n    const {\n      data,\n      setData,\n      config,\n      stepNumber,\n      activeStep,\n      onConfirm,\n      goBack\n    } = this.props;\n\n    return (\n      <div>\n        <CSSTransition\n          in={activeStep === stepNumber}\n          timeout={{\n            enter: 500,\n            exit: 500\n          }}\n          classNames=\"fade\"\n          unmountOnExit\n        >\n          <div>\n            {config.questions.map((questionConfig, index) => (\n              <Question\n                key={`step-${index}`}\n                config={questionConfig}\n                onSelect={newValue =>\n                  this._setDataForQuestion(setData, index, data, newValue)\n                }\n                data={data[index]}\n                setQuestionValid={valid => this._setQuestionValid(valid, index)}\n              />\n            ))}\n\n            {stepNumber > 1 && (\n              <Button subtle onClick={goBack}>\n                Terug\n              </Button>\n            )}\n            <Button\n              disabled={!this.state.isStepValid}\n              onClick={() => onConfirm()}\n            >\n              Bevestig keuze\n            </Button>\n          </div>\n        </CSSTransition>\n      </div>\n    );\n  }\n}\n\nexport default Step;\n","import React from 'react';\n\nconst ProgressBar = ({ activeStep, numberOfSteps }) => (\n  <div>\n    <h1>{activeStep}/{numberOfSteps}</h1>\n  </div>\n)\n\nexport default ProgressBar;\n","import React, { Component } from \"react\";\n\nimport Step from \"./step\";\nimport ProgressBar from \"./progress-bar\";\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.numberOfSteps = props.quizConfig.steps.length;\n    const initialData = props.quizConfig.steps.map(step =>\n      step.questions.map(() => null)\n    );\n\n    this.state = {\n      currentStep: 1,\n      data: initialData\n    };\n\n    this._nextStep = this._nextStep.bind(this);\n    this._prevStep = this._prevStep.bind(this);\n    this._setDataForStep = this._setDataForStep.bind(this);\n  }\n\n  _nextStep() {\n    this.setState({\n      currentStep: this.state.currentStep + 1\n    });\n  }\n\n  _prevStep() {\n    this.setState({\n      currentStep: this.state.currentStep - 1\n    });\n  }\n\n  _setDataForStep(index, stepData) {\n    const data = [...this.state.data];\n    data[index] = stepData;\n\n    this.setState({\n      data\n    });\n  }\n\n  render() {\n    const { quizConfig } = this.props;\n\n    return (\n      <div>\n        <ProgressBar\n          activeStep={this.state.currentStep}\n          numberOfSteps={this.numberOfSteps}\n        />\n        {quizConfig.steps.map((stepConfig, index) => (\n          <Step\n            config={stepConfig}\n            stepNumber={index + 1}\n            activeStep={this.state.currentStep}\n            onConfirm={stepData => {\n              this._nextStep();\n            }}\n            data={this.state.data[index]}\n            setData={data => this._setDataForStep(index, data)}\n            goBack={this._prevStep}\n            key={`step-${index + 1}`}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Quiz;\n","import React from \"react\";\n\nimport \"./App.css\";\nimport Quiz from \"./components/quiz\";\n\nconst quizConfig = {\n  steps: [\n    {\n      questions: [\n        {\n          question: \"What kind of house do you own?\",\n          choices: [\n            {\n              label: \"Free\"\n            },\n            {\n              label: \"Between\"\n            },\n            {\n              label: \"Corner\"\n            }\n          ]\n        },\n        {\n          question: \"What kind of house do you own?\",\n          choices: [\n            {\n              label: \"Free\"\n            },\n            {\n              label: \"Between\"\n            },\n            {\n              label: \"Corner\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      questions: [\n        {\n          question: \"What kind of roof does your house have?\",\n          choices: [\n            {\n              label: \"Crooked\"\n            },\n            {\n              label: \"Flat\"\n            },\n            {\n              label: \"Both\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      questions: [\n        {\n          question: \"What kind of roof does your house have?\",\n          choices: [\n            {\n              label: \"Crooked\"\n            },\n            {\n              label: \"Flat\"\n            },\n            {\n              label: \"Both\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quiz quizConfig={quizConfig} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}